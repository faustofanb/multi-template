# Gradle 版本目录 (Version Catalog)
# 用于集中管理项目依赖项和插件的版本，提高可维护性和一致性。
# 参考文档:
# https://docs.gradle.org/current/userguide/platforms.html#sub:version-catalog
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format
########################################################################################################################
[versions]
# Spring 生态
spring-boot = "3.0.7"
spring-cloud = "2022.0.3"
spring-cloud-alibaba = "2022.0.0.0-RC2"

# 数据库相关
mybatis-spring-boot = "3.0.2"
mybatis-plus = "3.5.7"
shardingsphere = "5.3.2"
sqlite-jdbc = "3.45.3.0"

# 缓存与分布式
redisson = "3.21.3"

# 工具库
jjwt = "0.9.1"
fastjson2 = "2.0.36"
dozer-core = "6.5.2"
hutool-all = "5.8.27"
guava = "30.0-jre"
transmittable-thread-local = "2.14.2"
lombok = "1.18.30"

# 任务调度
xxl-job = "2.3.1"
hippo4j-threadpool = "1.5.0"

# 消息队列
rocketmq-spring = "2.2.3"

# 支付集成
alipay-sdk = "4.38.10.ALL"

# 监控与链路追踪
micrometer-prometheus = "1.10.6"
skywalking = "9.3.0"

# API文档
knife4j = "4.5.0"

# 开发语言
kotlin = "1.9.0"

# 测试相关
junit-jupiter = "5.9.3"
mockito = "5.3.1"
mockito-kotlin = "5.1.0"
testcontainers = "1.18.3"
assertj = "3.24.2"
rest-assured = "5.3.0"
wiremock = "2.35.0"
powermock = "2.0.0"

########################################################################################################################
[libraries]
# Spring 核心依赖
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot"}
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }

# Kotlin相关
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }

# 数据库访问层
mybatis-spring-boot-starter = { module = "org.mybatis.spring.boot:mybatis-spring-boot-starter", version.ref = "mybatis-spring-boot" }
mybatis-plus-boot-starter = { module = "com.baomidou:mybatis-plus-boot-starter", version.ref = "mybatis-plus" }
mybatis-plus-jsqlparser = { module = "com.baomidou:mybatis-plus-jsqlparser", version.ref = "mybatis-plus" }
shardingsphere-jdbc-core = { module = "org.apache.shardingsphere:shardingsphere-jdbc-core", version.ref = "shardingsphere" }
sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite-jdbc" }

# 缓存与分布式
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
redisson-spring-boot-starter = { module = "org.redisson:redisson-spring-boot-starter", version.ref = "redisson" }

# 工具库
jjwt = { module = "io.jsonwebtoken:jjwt", version.ref = "jjwt" }
fastjson2 = { module = "com.alibaba.fastjson2:fastjson2", version.ref = "fastjson2" }
dozer-core = { module = "com.github.dozermapper:dozer-core", version.ref = "dozer-core" }
hutool-all = { module = "cn.hutool:hutool-all", version.ref = "hutool-all" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
transmittable-thread-local = { module = "com.alibaba:transmittable-thread-local", version.ref = "transmittable-thread-local" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# 任务调度
xxl-job-core = { module = "com.xuxueli:xxl-job-core", version.ref = "xxl-job" }
hippo4j-threadpool-config = { module = "cn.hippo4j:hippo4j-config-spring-boot-starter", version.ref = "hippo4j-threadpool" }

# 消息队列
rocketmq-spring-boot-starter = { module = "org.apache.rocketmq:rocketmq-spring-boot-starter", version.ref = "rocketmq-spring" }

# 支付集成
alipay-sdk-java = { module = "com.alipay.sdk:alipay-sdk-java", version.ref = "alipay-sdk" }

# 监控与链路追踪
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer-prometheus" }
skywalking-trace = { module = "org.apache.skywalking:apm-toolkit-trace", version.ref = "skywalking" }

# API文档
knife4j-spring-boot-starter = { module = "com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter", version.ref = "knife4j" }

# 测试相关
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockito-inline = { module = "org.mockito:mockito-inline", version = "5.2.0" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }


########################################################################################################################
# Libraries can be bundled together for easier import
[bundles]
test = ["junit-jupiter", "mockito-core", "mockito-junit-jupiter", "mockito-kotlin", "mockito-inline", "assertj-core", "junit-jupiter-api", "junit-jupiter-engine", "junit-jupiter-params"]
########################################################################################################################
[plugins] 
# 在buildSrc中统一声明了, 并在convention中引用, 这里不再需要
# 核心插件
# spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
# spring-dependency-management = { id = "io.spring.dependency-management", version = "1.1.4" }

# Kotlin相关插件
# kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
# kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }