services:
  #####################################################
  #                   测试管理                         #
  #####################################################
  metersphere:
    image: metersphere/metersphere-ce-allinone
    container_name: metersphere
    ports:
      - "8081:8081"
    volumes:
      - metersphere_data:/opt/metersphere/data
    networks:
      - cicd-net
  #####################################################
  #                   Gitlab                         #
  #####################################################
  gitlab:
    image: 'gitlab/gitlab-ce:latest' # 使用 GitLab 社区版最新镜像 (建议指定具体版本以保证稳定性, e.g., 'gitlab/gitlab-ce:16.10.1-ce.0')
    container_name: gitlab
    # hostname: '192.168.0.104' # 重要：设置一个主机名，Jenkins 需要用它来访问 GitLab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://192.168.0.104:80' # 访问 GitLab 的 URL，使用你希望的域名/IP 和端口
        gitlab_rails['gitlab_shell_ssh_port'] = 2224 # 将 SSH 端口映射到宿主机的 2224 端口
        # 添加更多 GitLab 配置 (可选)
        # unicorn['worker_processes'] = 3
        # postgresql['shared_buffers'] = "256MB"
    ports:
      - "80:80"     # 将宿主机的 8929 端口映射到 GitLab 容器的 80 端口 (HTTP)
      # - "8930:443"    # 如果配置 HTTPS，则映射 443 端口
      - "2224:22"     # 将宿主机的 2224 端口映射到 GitLab 容器的 22 端口 (SSH)
    volumes:
      - gitlab-config:/etc/gitlab   # GitLab 配置文件持久化
      - gitlab-logs:/var/log/gitlab # GitLab 日志文件持久化
      - gitlab-data:/var/opt/gitlab # GitLab 数据 (仓库等) 持久化
    shm_size: '256m' # 分配共享内存大小，GitLab 可能需要
    networks:
      - cicd-net
  #####################################################
  #                   jenkins                         #
  #####################################################
  jenkins:
    image: 'jenkins/jenkins:latest-jdk17' # 使用 Jenkins LTS (长期支持) 版，基于 JDK 11
    container_name: jenkins
    # 如果遇到权限问题，可以尝试取消注释下一行，并确保宿主机用户/组 ID 为 1000
    # user: "1000:1000"
    ports:
      - "8080:8080" # Jenkins Web UI 端口
      - "50000:50000" # Jenkins Agent 通信端口
    volumes:
      - jenkins-data:/var/jenkins_home # Jenkins 主目录持久化
      # 可以将 Docker Socket 挂载进去，以便 Jenkins 内部可以执行 Docker 命令 (有安全风险，请谨慎使用)
      # - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # 可选：设置 Jenkins JVM 参数
      - JAVA_OPTS=-Duser.language=C.UTF-8 -Xms512m -Xmx1024m # 跳过初始设置向导，设置内存
      # 可选: 预设管理员账号密码 (安全性较低，不如首次登录设置)
      # - JENKINS_ADMIN_ID=admin
      # - JENKINS_ADMIN_PASSWORD=your_strong_password
    networks:
      - cicd-net
  #####################################################
  #                   config                          #
  #####################################################
volumes:
  metersphere_data:
  gitlab-config:
  gitlab-logs:
  gitlab-data:
  jenkins-data:

networks:
  cicd-net:
    driver: bridge # 使用桥接网络驱动

